import { collection, onSnapshot } from "firebase/firestore";
import { motion } from "framer-motion";
import { getSession } from "next-auth/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import Actress from "../components/Actress";
import EmptyMovie from "../components/EmptyMovie";

import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import Row from "../components/Row";
import { firestore } from "../firebase/firebase";

type Props = {
  session: any;
};

function Favourite({ session }: Props) {
  const [likeMovies, setLikeMovies] = useState<any[]>([]);
  const [isMovie, setIsMovie] = useState<boolean>(true);

  useEffect(
    () =>
      onSnapshot(
        collection(firestore, "netflixUsers", session?.user?.uid, "likeMovie"),
        (snapshot) => setLikeMovies(snapshot.docs)
      ),
    [firestore, session?.user?.uid]
  );

  return (
    <motion.div
      initial={{ opacity: 0 }}
      whileInView={{ opacity: 1 }}
      viewport={{ once: true }}
    >
      <Head>
        <title>Netflix Clone</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          href="https://www.designbust.com/download/1037/png/netflix_logo_png_transparet512.png"
        />
      </Head>
      <Navbar />
      <main className="pl-4 pb-4 lg:space-y-24">
        <section className="md:space-y-16 pt-36 pb-4 mb-4">
          <div className="flex justify-start gap-2">
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              className={`text-xl font-semibold px-2.5 py-2.5 bg-transparent shadow-md hover:bg-gray-900 rounded-md ${
                isMovie && "bg-gray-900 shadow-2xl"
              }`}
              onClick={() => setIsMovie(true)}
            >
              Movie
            </motion.button>
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              className={`text-xl font-semibold px-2.5 py-2.5 bg-transparent shadow-md hover:bg-gray-900 rounded-md ${
                !isMovie && "bg-gray-900 shadow-2xl"
              }`}
              onClick={() => setIsMovie(false)}
            >
              Actress
            </motion.button>
          </div>
          {isMovie ? (
            <>
              {likeMovies.length > 0 ? (
                <Row
                  likeMovies={likeMovies}
                  isDetails={true}
                  type="movie"
                  isSearch={true}
                  isfavourite={true}
                />
              ) : (
                <EmptyMovie />
              )}
            </>
          ) : (
            <Actress session={session} />
          )}
        </section>
      </main>
      <Footer />
    </motion.div>
  );
}

export default Favourite;

export const getServerSideProps = async (context: any) => {
  const session = await getSession(context);

  return {
    props: {
      session: session,
    },
  };
};
